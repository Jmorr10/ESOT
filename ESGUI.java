/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */


import com.wolfram.jlink.MathGraphicsJPanel;
import javax.swing.ImageIcon;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;

/**
 *
 * @author Joseph
 */
public class ESGUI extends javax.swing.JFrame {

    public static Boolean interrupted = false;
    public static MathGraphicsJPanel x0MC = null;
    public static MathGraphicsJPanel x1MC = null;
    public static MathGraphicsJPanel x2MC = null;
    public static MathGraphicsJPanel x3MC = null;
    public static MathGraphicsJPanel x4MC = null;
    public static MathGraphicsJPanel x5MC = null;
    public static MathGraphicsJPanel x6MC = null;
   
    /**
     * Creates new form ESGUI
     */
    public ESGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        networkTab = new javax.swing.JPanel();
        netScroller = new javax.swing.JScrollPane();
        networkingLog = new javax.swing.JTextArea();
        gridConnectorsPane = new javax.swing.JLayeredPane();
        node6Pane = new javax.swing.JLayeredPane();
        node6Img = new javax.swing.JLabel();
        node5Pane = new javax.swing.JLayeredPane();
        node5Img = new javax.swing.JLabel();
        node4Pane = new javax.swing.JLayeredPane();
        node4Img = new javax.swing.JLabel();
        node3Pane = new javax.swing.JLayeredPane();
        node3Img = new javax.swing.JLabel();
        node2Pane = new javax.swing.JLayeredPane();
        node2Img = new javax.swing.JLabel();
        node1Pane = new javax.swing.JLayeredPane();
        node1Img = new javax.swing.JLabel();
        node0Pane = new javax.swing.JLayeredPane();
        node0Img = new javax.swing.JLabel();
        gridConnectorsImg = new javax.swing.JLabel();
        runGABtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        startingPopSize = new javax.swing.JTextField();
        crossoverRate = new javax.swing.JTextField();
        mutationRate = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        epochLimit = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        perturbationGA = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        statusLbl = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        testingTab = new javax.swing.JPanel();
        xVar = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        perturbationHelp = new javax.swing.JButton();
        exit1 = new javax.swing.JButton();
        perturbationFunction = new javax.swing.JTextField();
        clearPerturbationLog = new javax.swing.JButton();
        runPerturbation = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        networkOrder = new javax.swing.JTextField();
        preferredNetworkChkBox = new javax.swing.JCheckBox();
        gridConnectorsPane1 = new javax.swing.JLayeredPane();
        node6Pane1 = new javax.swing.JLayeredPane();
        node6Img1 = new javax.swing.JLabel();
        node5Pane1 = new javax.swing.JLayeredPane();
        node5Img1 = new javax.swing.JLabel();
        node4Pane1 = new javax.swing.JLayeredPane();
        node4Img1 = new javax.swing.JLabel();
        node3Pane1 = new javax.swing.JLayeredPane();
        node3Img1 = new javax.swing.JLabel();
        node2Pane1 = new javax.swing.JLayeredPane();
        node2Img1 = new javax.swing.JLabel();
        node1Pane1 = new javax.swing.JLayeredPane();
        node1Img1 = new javax.swing.JLabel();
        node0Pane1 = new javax.swing.JLayeredPane();
        node0Img1 = new javax.swing.JLabel();
        gridConnectorsImg1 = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        node0Btn = new javax.swing.JRadioButton();
        node1Btn = new javax.swing.JRadioButton();
        node2Btn = new javax.swing.JRadioButton();
        node3Btn = new javax.swing.JRadioButton();
        node4Btn = new javax.swing.JRadioButton();
        node5Btn = new javax.swing.JRadioButton();
        node6Btn = new javax.swing.JRadioButton();
        graphDisplayPane = new javax.swing.JLayeredPane();
        scroller = new javax.swing.JScrollPane();
        perturbationLog = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ESOT - Joseph Morris - Copyright 2012");

        jTabbedPane2.setMaximumSize(new java.awt.Dimension(800, 522));
        jTabbedPane2.setMinimumSize(new java.awt.Dimension(800, 522));

        netScroller.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        netScroller.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        networkingLog.setColumns(20);
        networkingLog.setEditable(false);
        networkingLog.setLineWrap(true);
        networkingLog.setRows(5);
        netScroller.setViewportView(networkingLog);

        gridConnectorsPane.setBackground(new java.awt.Color(0, 255, 255));

        node6Img.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        node6Img.setIcon(new javax.swing.ImageIcon(getClass().getResource("emptyNodeBlue.png"))); // NOI18N
        node6Img.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        node6Img.setBounds(5, 30, 90, 100);
        node6Pane.add(node6Img, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node6Pane.setBounds(380, 270, 110, 130);
        gridConnectorsPane.add(node6Pane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node5Img.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        node5Img.setIcon(new javax.swing.ImageIcon(getClass().getResource("emptyNodeBlue.png"))); // NOI18N
        node5Img.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        node5Img.setBounds(10, 30, 90, 100);
        node5Pane.add(node5Img, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node5Pane.setBounds(230, 270, 110, 130);
        gridConnectorsPane.add(node5Pane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node4Img.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        node4Img.setIcon(new javax.swing.ImageIcon(getClass().getResource("emptyNodeBlue.png"))); // NOI18N
        node4Img.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        node4Img.setBounds(6, 30, 90, 100);
        node4Pane.add(node4Img, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node4Pane.setBounds(90, 270, 110, 130);
        gridConnectorsPane.add(node4Pane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node3Img.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        node3Img.setIcon(new javax.swing.ImageIcon(getClass().getResource("emptyNodeBlue.png"))); // NOI18N
        node3Img.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        node3Img.setBounds(10, 29, 90, 100);
        node3Pane.add(node3Img, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node3Pane.setBounds(370, 130, 110, 130);
        gridConnectorsPane.add(node3Pane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node2Img.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        node2Img.setIcon(new javax.swing.ImageIcon(getClass().getResource("emptyNodeRed.png"))); // NOI18N
        node2Img.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        node2Img.setBounds(6, 30, 90, 100);
        node2Pane.add(node2Img, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node2Pane.setBounds(230, 130, 110, 130);
        gridConnectorsPane.add(node2Pane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node1Img.setIcon(new javax.swing.ImageIcon(getClass().getResource("emptyNodeBlue.png"))); // NOI18N
        node1Img.setBounds(10, 14, 90, 110);
        node1Pane.add(node1Img, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node1Pane.setBounds(80, 140, 110, 130);
        gridConnectorsPane.add(node1Pane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node0Img.setIcon(new javax.swing.ImageIcon(getClass().getResource("emptyNodeBlue.png"))); // NOI18N
        node0Img.setBounds(6, 10, 110, 110);
        node0Pane.add(node0Img, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node0Pane.setBounds(230, 0, 120, 120);
        gridConnectorsPane.add(node0Pane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        gridConnectorsImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("gridConnections.png"))); // NOI18N
        gridConnectorsImg.setBounds(140, 70, 320, 330);
        gridConnectorsPane.add(gridConnectorsImg, javax.swing.JLayeredPane.DEFAULT_LAYER);

        runGABtn.setText("Run Genetic Algorithm");
        runGABtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runGABtnActionPerformed(evt);
            }
        });

        jLabel5.setText("Crossover Rate:");

        jLabel6.setText("Mutation Rate:");

        jLabel7.setText("Starting Population Size:");

        startingPopSize.setText("50");

        crossoverRate.setText("0.7");

        mutationRate.setText("0.001");

        jLabel8.setText("Epoch Limit:");

        epochLimit.setText("100");

        jLabel9.setText("Perturbation f(x):");

        perturbationGA.setText("Sin[x]");

        jLabel10.setText("Status:");

        statusLbl.setText("Not Running");

        javax.swing.GroupLayout networkTabLayout = new javax.swing.GroupLayout(networkTab);
        networkTab.setLayout(networkTabLayout);
        networkTabLayout.setHorizontalGroup(
            networkTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(networkTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(networkTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(runGABtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(netScroller, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                    .addGroup(networkTabLayout.createSequentialGroup()
                        .addGroup(networkTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addGroup(networkTabLayout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(statusLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(networkTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mutationRate)
                            .addComponent(crossoverRate)
                            .addComponent(epochLimit)
                            .addComponent(startingPopSize)
                            .addComponent(perturbationGA)
                            .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(gridConnectorsPane, javax.swing.GroupLayout.DEFAULT_SIZE, 571, Short.MAX_VALUE)
                .addContainerGap())
        );
        networkTabLayout.setVerticalGroup(
            networkTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(networkTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(networkTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gridConnectorsPane)
                    .addGroup(networkTabLayout.createSequentialGroup()
                        .addComponent(netScroller, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(networkTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(startingPopSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(networkTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(crossoverRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(networkTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(mutationRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(networkTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(epochLimit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(networkTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(perturbationGA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(networkTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(networkTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10)
                                .addComponent(statusLbl))
                            .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addComponent(runGABtn)))
                .addContainerGap())
        );

        jTabbedPane2.addTab("Network Determination", new javax.swing.ImageIcon(getClass().getResource("network.png")), networkTab); // NOI18N

        testingTab.setPreferredSize(new java.awt.Dimension(350, 300));

        xVar.setSelected(true);
        xVar.setText("Function has x variable?");

        jLabel1.setText("Perturbation f(x):");
        jLabel1.setToolTipText("The function of the perturbation. This can include Sin, Cos, PI, and E. All variables should be expressed in terms of \"x\".");

        perturbationHelp.setText("Help");
        perturbationHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                perturbationHelpActionPerformed(evt);
            }
        });

        exit1.setText("Exit");
        exit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit1ActionPerformed(evt);
            }
        });

        perturbationFunction.setText("sin(x)");

        clearPerturbationLog.setText("Clear Log");
        clearPerturbationLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearPerturbationLogActionPerformed(evt);
            }
        });

        runPerturbation.setText("Run");
        runPerturbation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runPerturbationActionPerformed(evt);
            }
        });

        jLabel11.setText("Using Network Order:");

        networkOrder.setText("1 3 5 4 6 2 0");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, preferredNetworkChkBox, org.jdesktop.beansbinding.ELProperty.create("${!selected}"), networkOrder, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        networkOrder.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                networkOrderCaretUpdate(evt);
            }
        });

        preferredNetworkChkBox.setSelected(true);
        preferredNetworkChkBox.setText("Use Preferred Network?");
        preferredNetworkChkBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                preferredNetworkChkBoxStateChanged(evt);
            }
        });

        gridConnectorsPane1.setBackground(new java.awt.Color(0, 255, 255));

        node6Img1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        node6Img1.setIcon(new javax.swing.ImageIcon(getClass().getResource("emptyNodeBlue.png"))); // NOI18N
        node6Img1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        node6Img1.setBounds(5, 30, 90, 100);
        node6Pane1.add(node6Img1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node6Pane1.setBounds(310, 230, 110, 130);
        gridConnectorsPane1.add(node6Pane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node5Img1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        node5Img1.setIcon(new javax.swing.ImageIcon(getClass().getResource("emptyNodeBlue.png"))); // NOI18N
        node5Img1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        node5Img1.setBounds(10, 30, 90, 100);
        node5Pane1.add(node5Img1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node5Pane1.setBounds(170, 230, 110, 130);
        gridConnectorsPane1.add(node5Pane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node4Img1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        node4Img1.setIcon(new javax.swing.ImageIcon(getClass().getResource("emptyNodeBlue.png"))); // NOI18N
        node4Img1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        node4Img1.setBounds(6, 30, 90, 100);
        node4Pane1.add(node4Img1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node4Pane1.setBounds(40, 230, 110, 130);
        gridConnectorsPane1.add(node4Pane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node3Img1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        node3Img1.setIcon(new javax.swing.ImageIcon(getClass().getResource("emptyNodeBlue.png"))); // NOI18N
        node3Img1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        node3Img1.setBounds(10, 29, 90, 100);
        node3Pane1.add(node3Img1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node3Pane1.setBounds(300, 90, 110, 130);
        gridConnectorsPane1.add(node3Pane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node2Img1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        node2Img1.setIcon(new javax.swing.ImageIcon(getClass().getResource("emptyNodeRed.png"))); // NOI18N
        node2Img1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        node2Img1.setBounds(5, 30, 90, 100);
        node2Pane1.add(node2Img1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node2Pane1.setBounds(170, 90, 110, 130);
        gridConnectorsPane1.add(node2Pane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node1Img1.setIcon(new javax.swing.ImageIcon(getClass().getResource("emptyNodeBlue.png"))); // NOI18N
        node1Img1.setBounds(10, 14, 90, 110);
        node1Pane1.add(node1Img1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node1Pane1.setBounds(30, 100, 110, 130);
        gridConnectorsPane1.add(node1Pane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node0Img1.setIcon(new javax.swing.ImageIcon(getClass().getResource("emptyNodeBlue.png"))); // NOI18N
        node0Img1.setBounds(6, 10, 110, 110);
        node0Pane1.add(node0Img1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        node0Pane1.setBounds(170, -20, 120, 120);
        gridConnectorsPane1.add(node0Pane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        gridConnectorsImg1.setIcon(new javax.swing.ImageIcon(getClass().getResource("gridConnections.png"))); // NOI18N
        gridConnectorsImg1.setBounds(80, -20, 380, 420);
        gridConnectorsPane1.add(gridConnectorsImg1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonGroup1.add(node0Btn);
        node0Btn.setText("Node 0 (Chicago) Graph");
        node0Btn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioButtonChanged(evt);
            }
        });
        node0Btn.setBounds(0, 0, 141, 23);
        jLayeredPane1.add(node0Btn, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonGroup1.add(node1Btn);
        node1Btn.setText("Node 1 (St. Louis) Graph");
        node1Btn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioButtonChanged(evt);
            }
        });
        node1Btn.setBounds(0, 20, 143, 23);
        jLayeredPane1.add(node1Btn, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonGroup1.add(node2Btn);
        node2Btn.setText("Node 2 (Nashville) Graph");
        node2Btn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioButtonChanged(evt);
            }
        });
        node2Btn.setBounds(0, 40, 145, 23);
        jLayeredPane1.add(node2Btn, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonGroup1.add(node3Btn);
        node3Btn.setText("Node 3 (Detroit) Graph");
        node3Btn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioButtonChanged(evt);
            }
        });
        node3Btn.setBounds(0, 60, 135, 23);
        jLayeredPane1.add(node3Btn, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonGroup1.add(node4Btn);
        node4Btn.setText("Node 4 (Cleveland) Graph");
        node4Btn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioButtonChanged(evt);
            }
        });
        node4Btn.setBounds(150, 0, 149, 23);
        jLayeredPane1.add(node4Btn, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonGroup1.add(node5Btn);
        node5Btn.setText("Node 5 (Minneapolis) Graph");
        node5Btn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioButtonChanged(evt);
            }
        });
        node5Btn.setBounds(150, 20, 157, 23);
        jLayeredPane1.add(node5Btn, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonGroup1.add(node6Btn);
        node6Btn.setText("Node 6 (Indianapolis) Graph");
        node6Btn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioButtonChanged(evt);
            }
        });
        node6Btn.setBounds(150, 40, 159, 23);
        jLayeredPane1.add(node6Btn, javax.swing.JLayeredPane.DEFAULT_LAYER);

        graphDisplayPane.setBackground(new java.awt.Color(204, 204, 204));
        graphDisplayPane.setOpaque(true);

        scroller.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scroller.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        perturbationLog.setColumns(20);
        perturbationLog.setEditable(false);
        perturbationLog.setLineWrap(true);
        perturbationLog.setRows(5);
        scroller.setViewportView(perturbationLog);

        javax.swing.GroupLayout testingTabLayout = new javax.swing.GroupLayout(testingTab);
        testingTab.setLayout(testingTabLayout);
        testingTabLayout.setHorizontalGroup(
            testingTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(testingTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(testingTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(testingTabLayout.createSequentialGroup()
                        .addComponent(runPerturbation, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(clearPerturbationLog)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(perturbationHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(exit1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(testingTabLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(networkOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(preferredNetworkChkBox))
                    .addGroup(testingTabLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(perturbationFunction, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(xVar))
                    .addComponent(gridConnectorsPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(testingTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(graphDisplayPane)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, testingTabLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46))
                    .addComponent(scroller, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE))
                .addContainerGap())
        );
        testingTabLayout.setVerticalGroup(
            testingTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(testingTabLayout.createSequentialGroup()
                .addGroup(testingTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(testingTabLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(scroller, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(graphDisplayPane, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(testingTabLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(gridConnectorsPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(testingTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(testingTabLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(testingTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(perturbationFunction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(xVar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(testingTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(networkOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(preferredNetworkChkBox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(testingTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, testingTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(runPerturbation)
                                .addComponent(clearPerturbationLog)
                                .addComponent(perturbationHelp))
                            .addComponent(exit1, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, testingTabLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Perturbation Testing", new javax.swing.ImageIcon(getClass().getResource("timer.png")), testingTab); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void perturbationHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_perturbationHelpActionPerformed
        JOptionPane.showMessageDialog(this, "This program was developed by Joseph Morris.\nIt functions in conjunction with Mathematica to measure energy fluxuation across a closed power grid.\nThe following functions are enabled: Sin, Cos, π (as PI or pi), and Euler's constant (as E or e).\nHover over labels for more information contained in ToolTips.\nFor any technical issues contact Joseph at: Jmorr10@u.rochester.edu", "About", JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_perturbationHelpActionPerformed

    private void exit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exit1ActionPerformed

    private void clearPerturbationLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearPerturbationLogActionPerformed
        perturbationLog.setText("");
    }//GEN-LAST:event_clearPerturbationLogActionPerformed

    private void runPerturbationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runPerturbationActionPerformed

        Runnable r = new Runnable() {

            @Override
            public void run() {
                EnergySystem.calculatePerturbation();
            }
        };
        Thread worker = new Thread(r, "worker");
        worker.start();
    }//GEN-LAST:event_runPerturbationActionPerformed

    private void runGABtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runGABtnActionPerformed
        try {
            double timeCalc = (Integer.parseInt(this.epochLimit.getText())*Integer.parseInt(this.startingPopSize.getText())) * (1.0/7.49);
            double minutes = (double)timeCalc/60.0;
            minutes = Math.round(minutes);
            JOptionPane.showMessageDialog(null, "This operation is estimated to take " + Double.toString(minutes) + " minutes. Progress will be indicated on the progress bar. Please be patient.", "Patience is a Virtue", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            networkingLog.setText(networkingLog.getText() + "Input error!\n");
            netScroller.validate();
            netScroller.getVerticalScrollBar().setValue(netScroller.getVerticalScrollBar().getMaximum());
            return;
        }
        Runnable r = new Runnable() {

            @Override
            public void run() {
                EnergySystem.runGA();
            }
        };
        Thread workerGA = new Thread(r, "workerGA");
        workerGA.start();
    }//GEN-LAST:event_runGABtnActionPerformed

    private void networkOrderCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_networkOrderCaretUpdate
       String positions = networkOrder.getText();
        String[] pStringArray = positions.split(" ");
       if (pStringArray.length >= 1 && !pStringArray[0].equals("") && pStringArray[0].length() == 1) {
            node0Img1.setIcon(new ImageIcon(EnergySystem.class.getResource(pStringArray[0].toString()  +".png")));
       } else {
            node0Img1.setIcon(new ImageIcon(EnergySystem.class.getResource("emptyNodeBlue.png")));
       }
       if (pStringArray.length >= 2 && pStringArray[1].length() == 1) {
            node1Img1.setIcon(new ImageIcon(EnergySystem.class.getResource(pStringArray[1].toString()  +".png")));
       }
       else {
            node1Img1.setIcon(new ImageIcon(EnergySystem.class.getResource("emptyNodeBlue.png")));
       }
       if (pStringArray.length >= 3 && pStringArray[2].length() == 1) {
            node2Img1.setIcon(new ImageIcon(EnergySystem.class.getResource(pStringArray[2].toString()  +".png")));
       }
       else {
            node2Img1.setIcon(new ImageIcon(EnergySystem.class.getResource("emptyNodeBlue.png")));
       }
       if (pStringArray.length >= 4 && pStringArray[3].length() == 1){
            node3Img1.setIcon(new ImageIcon(EnergySystem.class.getResource(pStringArray[3].toString()  +".png")));
       }
       else {
            node3Img1.setIcon(new ImageIcon(EnergySystem.class.getResource("emptyNodeBlue.png")));
        }
       if (pStringArray.length >= 5 && pStringArray[4].length() == 1) {
            node4Img1.setIcon(new ImageIcon(EnergySystem.class.getResource(pStringArray[4].toString()  +".png")));
       }
       else {
            node4Img1.setIcon(new ImageIcon(EnergySystem.class.getResource("emptyNodeBlue.png")));
       }
       if (pStringArray.length >= 6 && pStringArray[5].length() == 1) {
            node5Img1.setIcon(new ImageIcon(EnergySystem.class.getResource(pStringArray[5].toString()  +".png")));
       }
       else {
            node5Img1.setIcon(new ImageIcon(EnergySystem.class.getResource("emptyNodeBlue.png")));
        }
       if (pStringArray.length >= 7 && pStringArray[6].length() == 1) {
            node6Img1.setIcon(new ImageIcon(EnergySystem.class.getResource(pStringArray[6].toString()  +".png")));
       }
       else {
            node6Img1.setIcon(new ImageIcon(EnergySystem.class.getResource("emptyNodeBlue.png")));
        }
    }//GEN-LAST:event_networkOrderCaretUpdate

    private void preferredNetworkChkBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_preferredNetworkChkBoxStateChanged
        if (preferredNetworkChkBox.isSelected()) {
            networkOrder.setText("1 3 5 4 6 2 0");
            EnergySystem.setNetworkOrderImages();
        }
    }//GEN-LAST:event_preferredNetworkChkBoxStateChanged

    private void radioButtonChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioButtonChanged
          if (node0Btn.isSelected()) {
            graphDisplayPane.remove(0);
            graphDisplayPane.add(x0MC, 0);
        }
        if (node1Btn.isSelected()) {
            graphDisplayPane.remove(0);
            graphDisplayPane.add(x1MC, 0);
        }
        if (node2Btn.isSelected()) {
             graphDisplayPane.remove(0);
            graphDisplayPane.add(x2MC, 0);
        }
        if (node3Btn.isSelected()) {
            graphDisplayPane.remove(0);
            graphDisplayPane.add(x3MC, 0);
        }
        if (node4Btn.isSelected()) {
             graphDisplayPane.remove(0);
            graphDisplayPane.add(x4MC, 0);
        }
        if (node5Btn.isSelected()) {
             graphDisplayPane.remove(0);
            graphDisplayPane.add(x5MC, 0);
        }
        if (node6Btn.isSelected()) {
             graphDisplayPane.remove(0);
            graphDisplayPane.add(x6MC, 0);
        }
    }//GEN-LAST:event_radioButtonChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ESGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ESGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ESGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ESGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ESGUI().setVisible(true);
                
                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clearPerturbationLog;
    public javax.swing.JTextField crossoverRate;
    public javax.swing.JTextField epochLimit;
    private javax.swing.JButton exit1;
    public javax.swing.JLayeredPane graphDisplayPane;
    private javax.swing.JLabel gridConnectorsImg;
    private javax.swing.JLabel gridConnectorsImg1;
    private javax.swing.JLayeredPane gridConnectorsPane;
    private javax.swing.JLayeredPane gridConnectorsPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    public javax.swing.JTextField mutationRate;
    public javax.swing.JScrollPane netScroller;
    public javax.swing.JTextField networkOrder;
    private javax.swing.JPanel networkTab;
    public javax.swing.JTextArea networkingLog;
    public javax.swing.JRadioButton node0Btn;
    public javax.swing.JLabel node0Img;
    public javax.swing.JLabel node0Img1;
    private javax.swing.JLayeredPane node0Pane;
    private javax.swing.JLayeredPane node0Pane1;
    private javax.swing.JRadioButton node1Btn;
    public javax.swing.JLabel node1Img;
    public javax.swing.JLabel node1Img1;
    private javax.swing.JLayeredPane node1Pane;
    private javax.swing.JLayeredPane node1Pane1;
    private javax.swing.JRadioButton node2Btn;
    public javax.swing.JLabel node2Img;
    public javax.swing.JLabel node2Img1;
    private javax.swing.JLayeredPane node2Pane;
    private javax.swing.JLayeredPane node2Pane1;
    private javax.swing.JRadioButton node3Btn;
    public javax.swing.JLabel node3Img;
    public javax.swing.JLabel node3Img1;
    private javax.swing.JLayeredPane node3Pane;
    private javax.swing.JLayeredPane node3Pane1;
    private javax.swing.JRadioButton node4Btn;
    public javax.swing.JLabel node4Img;
    public javax.swing.JLabel node4Img1;
    private javax.swing.JLayeredPane node4Pane;
    private javax.swing.JLayeredPane node4Pane1;
    private javax.swing.JRadioButton node5Btn;
    public javax.swing.JLabel node5Img;
    public javax.swing.JLabel node5Img1;
    private javax.swing.JLayeredPane node5Pane;
    private javax.swing.JLayeredPane node5Pane1;
    private javax.swing.JRadioButton node6Btn;
    public javax.swing.JLabel node6Img;
    public javax.swing.JLabel node6Img1;
    private javax.swing.JLayeredPane node6Pane;
    private javax.swing.JLayeredPane node6Pane1;
    public javax.swing.JTextField perturbationFunction;
    public javax.swing.JTextField perturbationGA;
    private javax.swing.JButton perturbationHelp;
    public javax.swing.JTextArea perturbationLog;
    public javax.swing.JCheckBox preferredNetworkChkBox;
    public javax.swing.JProgressBar progressBar;
    private javax.swing.JButton runGABtn;
    private javax.swing.JButton runPerturbation;
    public javax.swing.JScrollPane scroller;
    public javax.swing.JTextField startingPopSize;
    public javax.swing.JLabel statusLbl;
    private javax.swing.JPanel testingTab;
    public javax.swing.JCheckBox xVar;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
